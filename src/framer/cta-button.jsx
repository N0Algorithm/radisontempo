// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 03e84f604d558643 "Radison (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Basic' | 'Only Arrow' // Variant
 * title?: string // Title
 * background?: string // Background
 * arrow ?: boolean // arrow 
 * link?: string // Link
 * fontSize?: number // Font Size
}} Props

 */
import { Icon } from "./chunks/chunk-JS6VSBDT.js";
import "./chunks/chunk-BVM6H744.js";
import { routes } from "./chunks/chunk-HNSAVAZ4.js";

// virtual:cta-button
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/jyzmHGsvingEYuiTsklk/D8ST2Nk8pa705O8WJJ78/T9wkJjJeC.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ComponentViewportProvider,
	ControlType,
	cx,
	getFonts,
	Link,
	RichText,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var FeatherFonts = getFonts(Icon);
var enabledGestures = {
	s1t48AFlC: {
		hover: true,
	},
	xIvnDW23K: {
		hover: true,
	},
};
var cycleOrder = ["xIvnDW23K", "s1t48AFlC"];
var serializationHash = "framer-BtUdh";
var variantClassNames = {
	s1t48AFlC: "framer-v-18d4epr",
	xIvnDW23K: "framer-v-1dd3jkw",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants === null || variants === void 0
		? void 0
		: variants.forEach(
				(variant) =>
					variant && Object.assign(nextOverrides, overrides[variant]),
			);
	return nextOverrides;
}
var transition1 = {
	damping: 60,
	delay: 0,
	mass: 1,
	stiffness: 300,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition =
		value !== null && value !== void 0 ? value : config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	"Only Arrow": "s1t48AFlC",
	Basic: "xIvnDW23K",
};
var getProps = ({
	arrow,
	background,
	fontSize,
	height,
	id,
	link,
	title,
	width,
	...props
}) => {
	var _ref, _ref1, _ref2, _humanReadableVariantMap_props_variant, _ref3, _ref4;
	return {
		...props,
		ae3kdG3b0:
			(_ref =
				background !== null && background !== void 0
					? background
					: props.ae3kdG3b0) !== null && _ref !== void 0
				? _ref
				: "var(--token-aea172f0-3396-4049-adec-6bcfa7c365ff, rgb(81, 47, 235))",
		IHCtoN6iC:
			(_ref1 = arrow !== null && arrow !== void 0 ? arrow : props.IHCtoN6iC) !==
				null && _ref1 !== void 0
				? _ref1
				: true,
		NAbd17i0q:
			(_ref2 = title !== null && title !== void 0 ? title : props.NAbd17i0q) !==
				null && _ref2 !== void 0
				? _ref2
				: "Get in touch",
		t90xdY6CE: link !== null && link !== void 0 ? link : props.t90xdY6CE,
		variant:
			(_ref3 =
				(_humanReadableVariantMap_props_variant =
					humanReadableVariantMap[props.variant]) !== null &&
				_humanReadableVariantMap_props_variant !== void 0
					? _humanReadableVariantMap_props_variant
					: props.variant) !== null && _ref3 !== void 0
				? _ref3
				: "xIvnDW23K",
		yt52UU3wF:
			(_ref4 =
				fontSize !== null && fontSize !== void 0
					? fontSize
					: props.yt52UU3wF) !== null && _ref4 !== void 0
				? _ref4
				: 15,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const {
		style,
		className,
		layoutId,
		variant,
		NAbd17i0q,
		ae3kdG3b0,
		IHCtoN6iC,
		t90xdY6CE,
		yt52UU3wF,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "xIvnDW23K",
		enabledGestures,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const ref1 = React.useRef(null);
	const isDisplayed = () => {
		if (gestureVariant === "s1t48AFlC-hover") return false;
		if (baseVariant === "s1t48AFlC") return false;
		return true;
	};
	const defaultLayoutId = React.useId();
	const sharedStyleClassNames = [];
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup
			id={layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId}
		>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<Link href={t90xdY6CE} nodeId={"xIvnDW23K"} smoothScroll={true}>
						<motion.a
							{...restProps}
							{...gestureHandlers}
							className={`${cx(serializationHash, ...sharedStyleClassNames, "framer-1dd3jkw", className, classNames)} framer-1bqzv7t`}
							data-border={true}
							data-framer-name={"Basic"}
							layoutDependency={layoutDependency}
							layoutId={"xIvnDW23K"}
							ref={ref !== null && ref !== void 0 ? ref : ref1}
							style={{
								"--border-bottom-width": "1px",
								"--border-color":
									"var(--token-6839e435-35f3-4ab3-b723-e98c27e525bc, rgba(255, 255, 255, 0.1))",
								"--border-left-width": "1px",
								"--border-right-width": "1px",
								"--border-style": "solid",
								"--border-top-width": "1px",
								backgroundColor: ae3kdG3b0,
								borderBottomLeftRadius: 8,
								borderBottomRightRadius: 8,
								borderTopLeftRadius: 8,
								borderTopRightRadius: 8,
								boxShadow:
									"0px 0.7065919983928324px 0.7065919983928324px -0.625px rgba(0, 0, 0, 0.14764), 0px 1.8065619053231785px 1.8065619053231785px -1.25px rgba(0, 0, 0, 0.14398), 0px 3.6217592146567767px 3.6217592146567767px -1.875px rgba(0, 0, 0, 0.13793), 0px 6.8655999097303715px 6.8655999097303715px -2.5px rgba(0, 0, 0, 0.12711), 0px 13.646761411524492px 13.646761411524492px -3.125px rgba(0, 0, 0, 0.10451), 0px 30px 30px -3.75px rgba(0, 0, 0, 0.05)",
								...style,
							}}
							variants={{
								"xIvnDW23K-hover": {
									"--border-color": "rgba(255, 255, 255, 0.3)",
								},
							}}
							{...addPropertyOverrides(
								{
									"s1t48AFlC-hover": {
										"data-framer-name": void 0,
									},
									"xIvnDW23K-hover": {
										"data-framer-name": void 0,
									},
									s1t48AFlC: {
										"data-framer-name": "Only Arrow",
									},
								},
								baseVariant,
								gestureVariant,
							)}
						>
							<motion.div
								className={"framer-glktyg"}
								data-framer-name={"Text Container"}
								layoutDependency={layoutDependency}
								layoutId={"QcryXrbks"}
							>
								<motion.div
									className={"framer-16ny6i"}
									data-framer-name={"1st state"}
									layoutDependency={layoutDependency}
									layoutId={"vkMqisTgR"}
								>
									{isDisplayed() && (
										<RichText
											__fromCanvasComponent={true}
											className={"framer-17m08j9"}
											fonts={["FS;Outfit-regular"]}
											layoutDependency={layoutDependency}
											layoutId={"OcOxzK0LW"}
											style={{
												"--extracted-r6o4lv":
													"var(--token-92a1cea2-6d53-45ff-98da-32c110a8c3fc, rgb(255, 255, 255))",
												"--framer-link-text-color": "rgb(0, 153, 255)",
												"--framer-link-text-decoration": "underline",
												"--framer-paragraph-spacing": "0px",
												"--variable-reference-yt52UU3wF-T9wkJjJeC": yt52UU3wF,
											}}
											text={NAbd17i0q}
											verticalAlignment={"top"}
											withExternalLayout={true}
										>
											<React.Fragment>
												<motion.p
													style={{
														"--font-selector": "RlM7T3V0Zml0LXJlZ3VsYXI=",
														"--framer-font-family":
															'"Outfit", "Outfit Placeholder", sans-serif',
														"--framer-font-size":
															"calc(var(--variable-reference-yt52UU3wF-T9wkJjJeC) * 1px)",
														"--framer-text-alignment": "center",
														"--framer-text-color":
															"var(--extracted-r6o4lv, var(--token-92a1cea2-6d53-45ff-98da-32c110a8c3fc, rgb(255, 255, 255)))",
													}}
												>
													{"Get in touch"}
												</motion.p>
											</React.Fragment>
										</RichText>
									)}
									{IHCtoN6iC && (
										<ComponentViewportProvider>
											<motion.div
												className={"framer-vskpd9-container"}
												layoutDependency={layoutDependency}
												layoutId={"GnTGuMvuG-container"}
											>
												<Icon
													color={"rgb(255, 255, 255)"}
													height={"100%"}
													iconSearch={"arrow-up-right"}
													iconSelection={"arrow-up-right"}
													id={"GnTGuMvuG"}
													layoutId={"GnTGuMvuG"}
													mirrored={false}
													selectByList={true}
													style={{
														height: "100%",
														width: "100%",
													}}
													width={"100%"}
												/>
											</motion.div>
										</ComponentViewportProvider>
									)}
								</motion.div>
								<motion.div
									className={"framer-hsjj43"}
									data-framer-name={"2nd state"}
									layoutDependency={layoutDependency}
									layoutId={"Z7r8LMRuc"}
								>
									{isDisplayed() && (
										<RichText
											__fromCanvasComponent={true}
											className={"framer-xo714e"}
											fonts={["FS;Outfit-regular"]}
											layoutDependency={layoutDependency}
											layoutId={"Q2usLuzQ9"}
											style={{
												"--extracted-r6o4lv": "rgb(255, 255, 255)",
												"--framer-link-text-color": "rgb(0, 153, 255)",
												"--framer-link-text-decoration": "underline",
												"--framer-paragraph-spacing": "0px",
											}}
											text={NAbd17i0q}
											verticalAlignment={"top"}
											withExternalLayout={true}
										>
											<React.Fragment>
												<motion.p
													style={{
														"--font-selector": "RlM7T3V0Zml0LXJlZ3VsYXI=",
														"--framer-font-family":
															'"Outfit", "Outfit Placeholder", sans-serif',
														"--framer-font-size": "15px",
														"--framer-text-alignment": "center",
														"--framer-text-color":
															"var(--extracted-r6o4lv, rgb(255, 255, 255))",
													}}
												>
													{"Get in touch"}
												</motion.p>
											</React.Fragment>
										</RichText>
									)}
									{IHCtoN6iC && (
										<ComponentViewportProvider>
											<motion.div
												className={"framer-jz8sxi-container"}
												layoutDependency={layoutDependency}
												layoutId={"mczBzoHzX-container"}
											>
												<Icon
													color={"rgb(255, 255, 255)"}
													height={"100%"}
													iconSearch={"arrow-up-right"}
													iconSelection={"arrow-right"}
													id={"mczBzoHzX"}
													layoutId={"mczBzoHzX"}
													mirrored={false}
													selectByList={true}
													style={{
														height: "100%",
														width: "100%",
													}}
													width={"100%"}
												/>
											</motion.div>
										</ComponentViewportProvider>
									)}
								</motion.div>
							</motion.div>
						</motion.a>
					</Link>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-BtUdh.framer-1bqzv7t, .framer-BtUdh .framer-1bqzv7t { display: block; }",
	".framer-BtUdh.framer-1dd3jkw { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 10px 15px 10px 15px; position: relative; text-decoration: none; width: min-content; }",
	".framer-BtUdh .framer-glktyg { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: 18px; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: min-content; }",
	".framer-BtUdh .framer-16ny6i, .framer-BtUdh .framer-hsjj43 { align-content: flex-end; align-items: flex-end; align-self: stretch; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 5px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: auto; }",
	".framer-BtUdh .framer-17m08j9, .framer-BtUdh .framer-xo714e { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	".framer-BtUdh .framer-vskpd9-container, .framer-BtUdh .framer-jz8sxi-container { flex: none; height: 16px; position: relative; width: 16px; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-BtUdh.framer-1dd3jkw, .framer-BtUdh .framer-glktyg, .framer-BtUdh .framer-16ny6i, .framer-BtUdh .framer-hsjj43 { gap: 0px; } .framer-BtUdh.framer-1dd3jkw > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-BtUdh.framer-1dd3jkw > :first-child, .framer-BtUdh .framer-16ny6i > :first-child, .framer-BtUdh .framer-hsjj43 > :first-child { margin-left: 0px; } .framer-BtUdh.framer-1dd3jkw > :last-child, .framer-BtUdh .framer-16ny6i > :last-child, .framer-BtUdh .framer-hsjj43 > :last-child { margin-right: 0px; } .framer-BtUdh .framer-glktyg > * { margin: 0px; margin-bottom: calc(10px / 2); margin-top: calc(10px / 2); } .framer-BtUdh .framer-glktyg > :first-child { margin-top: 0px; } .framer-BtUdh .framer-glktyg > :last-child { margin-bottom: 0px; } .framer-BtUdh .framer-16ny6i > *, .framer-BtUdh .framer-hsjj43 > * { margin: 0px; margin-left: calc(5px / 2); margin-right: calc(5px / 2); } }",
	".framer-BtUdh.framer-v-18d4epr.framer-1dd3jkw { padding: 8px 12px 8px 12px; }",
	".framer-BtUdh.framer-v-18d4epr .framer-vskpd9-container, .framer-BtUdh.framer-v-18d4epr .framer-jz8sxi-container { height: 18px; width: 18px; }",
	".framer-BtUdh.framer-v-1dd3jkw.hover .framer-glktyg, .framer-BtUdh.framer-v-18d4epr.hover .framer-glktyg { justify-content: flex-end; }",
	'.framer-BtUdh[data-border="true"]::after, .framer-BtUdh [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FramerT9wkJjJeC = withCSS(Component, css, "framer-BtUdh");
var stdin_default = FramerT9wkJjJeC;
FramerT9wkJjJeC.displayName = "CTA Button";
FramerT9wkJjJeC.defaultProps = {
	height: 38,
	width: 131,
};
addPropertyControls(FramerT9wkJjJeC, {
	variant: {
		options: ["xIvnDW23K", "s1t48AFlC"],
		optionTitles: ["Basic", "Only Arrow"],
		title: "Variant",
		type: ControlType.Enum,
	},
	NAbd17i0q: {
		defaultValue: "Get in touch",
		displayTextArea: false,
		title: "Title",
		type: ControlType.String,
	},
	ae3kdG3b0: {
		defaultValue:
			'var(--token-aea172f0-3396-4049-adec-6bcfa7c365ff, rgb(81, 47, 235)) /* {"name":"Blue"} */',
		title: "Background",
		type: ControlType.Color,
	},
	IHCtoN6iC: {
		defaultValue: true,
		title: "arrow ",
		type: ControlType.Boolean,
	},
	t90xdY6CE: {
		title: "Link",
		type: ControlType.Link,
	},
	yt52UU3wF: {
		defaultValue: 15,
		title: "Font Size",
		type: ControlType.Number,
	},
});
addFonts(
	FramerT9wkJjJeC,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Outfit",
					source: "fontshare",
					style: "normal",
					url: "https://framerusercontent.com/third-party-assets/fontshare/wf/RPEPC24XXAVK6EWUOKWQUPTOZQR35AS2/BVWMEQ5ZCLZP2VOXOHXQDCZADXNFBXUF/5REHZLR2B5PQAKMITIQJK6BDK34RDHS4.woff2",
					weight: "400",
				},
			],
		},
		...FeatherFonts,
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:cta-button
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "s1t48AFlC",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"03e84f604d558643c3b6be5341937b8855a6dbf7a820b887c6c5c1f3ad48ac5b"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders CtaButtonFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"03e84f604d558643c3b6be5341937b8855a6dbf7a820b887c6c5c1f3ad48ac5b"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var cta_button_default = ComponentWithRoot;
export { cta_button_default as default };
