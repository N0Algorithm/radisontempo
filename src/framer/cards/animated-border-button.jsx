// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 03e84f604d558643 "Radison (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Top' | 'Right' | 'Bottom' | 'Left' // Variant
 * buttonText?: string // Button text
 * textSize?: number // Text size
 * textColor?: string // Text color
 * buttonFill?: string // Button fill
 * iconVisible?: boolean // Icon Visible
}} Props

 */
import { Icon } from "../chunks/chunk-IXDMRUES.js";
import "../chunks/chunk-BVM6H744.js";
import { routes } from "../chunks/chunk-HNSAVAZ4.js";

// virtual:cards/animated-border-button
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/yG4pRjeX3rouzmaGZBuF/48QMJqjF12REIaAVO2R4/CccDZOMJL.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ComponentViewportProvider,
	ControlType,
	cx,
	CycleVariantState,
	getFonts,
	RichText,
	useActiveVariantCallback,
	useComponentViewport,
	useLocaleInfo,
	useOnVariantChange,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var PhosphorFonts = getFonts(Icon);
var cycleOrder = ["oLeVJE9Vq", "jjFHb8UN5", "PHtno0CXq", "jQO1TQBvU"];
var serializationHash = "framer-5KfUw";
var variantClassNames = {
	jjFHb8UN5: "framer-v-uhrrs2",
	jQO1TQBvU: "framer-v-1q456h1",
	oLeVJE9Vq: "framer-v-1oe2mnv",
	PHtno0CXq: "framer-v-ax441w",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants === null || variants === void 0
		? void 0
		: variants.forEach(
				(variant) =>
					variant && Object.assign(nextOverrides, overrides[variant]),
			);
	return nextOverrides;
}
var transition1 = {
	delay: 0,
	duration: 0.8,
	ease: [0, 0, 1, 1],
	type: "tween",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition =
		value !== null && value !== void 0 ? value : config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	Bottom: "PHtno0CXq",
	Left: "jQO1TQBvU",
	Right: "jjFHb8UN5",
	Top: "oLeVJE9Vq",
};
var getProps = ({
	buttonFill,
	buttonText,
	height,
	iconVisible,
	id,
	textColor,
	textSize,
	width,
	...props
}) => {
	var _ref, _ref1, _ref2, _ref3, _humanReadableVariantMap_props_variant, _ref4;
	return {
		...props,
		BrUi5h7tU:
			(_ref =
				textColor !== null && textColor !== void 0
					? textColor
					: props.BrUi5h7tU) !== null && _ref !== void 0
				? _ref
				: "rgb(255, 255, 255)",
		ofLqZhEO8:
			(_ref1 =
				buttonText !== null && buttonText !== void 0
					? buttonText
					: props.ofLqZhEO8) !== null && _ref1 !== void 0
				? _ref1
				: "Button",
		PPM8eZNfR:
			(_ref2 =
				buttonFill !== null && buttonFill !== void 0
					? buttonFill
					: props.PPM8eZNfR) !== null && _ref2 !== void 0
				? _ref2
				: "rgb(49, 49, 49)",
		Rb5OgUSWE:
			(_ref3 =
				textSize !== null && textSize !== void 0
					? textSize
					: props.Rb5OgUSWE) !== null && _ref3 !== void 0
				? _ref3
				: 16,
		variant:
			(_ref4 =
				(_humanReadableVariantMap_props_variant =
					humanReadableVariantMap[props.variant]) !== null &&
				_humanReadableVariantMap_props_variant !== void 0
					? _humanReadableVariantMap_props_variant
					: props.variant) !== null && _ref4 !== void 0
				? _ref4
				: "oLeVJE9Vq",
		VGW0OvIrj:
			iconVisible !== null && iconVisible !== void 0
				? iconVisible
				: props.VGW0OvIrj,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const {
		style,
		className,
		layoutId,
		variant,
		ofLqZhEO8,
		Rb5OgUSWE,
		BrUi5h7tU,
		PPM8eZNfR,
		VGW0OvIrj,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "oLeVJE9Vq",
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const { activeVariantCallback, delay } =
		useActiveVariantCallback(baseVariant);
	const onAppearx4yxc4 = activeVariantCallback(async (...args) => {
		await delay(() => setVariant(CycleVariantState), 700);
	});
	useOnVariantChange(baseVariant, {
		default: onAppearx4yxc4,
	});
	const ref1 = React.useRef(null);
	const defaultLayoutId = React.useId();
	const sharedStyleClassNames = [];
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup
			id={layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId}
		>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							serializationHash,
							...sharedStyleClassNames,
							"framer-1oe2mnv",
							className,
							classNames,
						)}
						data-framer-name={"Top"}
						data-highlight={true}
						layoutDependency={layoutDependency}
						layoutId={"oLeVJE9Vq"}
						ref={ref !== null && ref !== void 0 ? ref : ref1}
						style={{
							backgroundColor: "rgba(255, 255, 255, 0.05)",
							borderBottomLeftRadius: 8,
							borderBottomRightRadius: 8,
							borderTopLeftRadius: 8,
							borderTopRightRadius: 8,
							...style,
						}}
						{...addPropertyOverrides(
							{
								jjFHb8UN5: {
									"data-framer-name": "Right",
								},
								jQO1TQBvU: {
									"data-framer-name": "Left",
								},
								PHtno0CXq: {
									"data-framer-name": "Bottom",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<motion.div
							className={"framer-ogl64s"}
							data-framer-name={"Glow"}
							layoutDependency={layoutDependency}
							layoutId={"CMQQfek18"}
							style={{
								background:
									"radial-gradient(25% 50% at 50% 0%, rgba(81, 47, 235, 0.8) 0%, rgba(255, 255, 255, 0) 100%)",
								borderBottomLeftRadius: 7,
								borderBottomRightRadius: 7,
								borderTopLeftRadius: 7,
								borderTopRightRadius: 7,
								filter: "blur(15px)",
								WebkitFilter: "blur(15px)",
							}}
							variants={{
								jjFHb8UN5: {
									background:
										"radial-gradient(25% 35.4% at 100% 50%, rgba(81, 47, 235, 0.8) 0%, rgba(255, 255, 255, 0) 100%)",
								},
								jQO1TQBvU: {
									background:
										"radial-gradient(25% 34.4% at 0% 50%, rgba(81, 47, 235, 0.8) 0%, rgba(255, 255, 255, 0) 100%)",
								},
								PHtno0CXq: {
									background:
										"radial-gradient(25% 50% at 50% 100%, rgba(81, 47, 235, 0.8) 0%, rgba(255, 255, 255, 0) 100%)",
								},
							}}
						/>
						<motion.div
							className={"framer-16gmlxt"}
							data-framer-name={"Stroke"}
							layoutDependency={layoutDependency}
							layoutId={"TXxGe7oD3"}
							style={{
								background:
									"radial-gradient(20.7% 50% at 50% 0%, rgba(81, 47, 235, 0.8) 0%, rgba(255, 255, 255, 0) 100%)",
								borderBottomLeftRadius: 7,
								borderBottomRightRadius: 7,
								borderTopLeftRadius: 7,
								borderTopRightRadius: 7,
							}}
							variants={{
								jjFHb8UN5: {
									background:
										"radial-gradient(16.2% 41.199999999999996% at 100% 50%, rgba(81, 47, 235, 0.8) 0%, rgba(255, 255, 255, 0) 100%)",
								},
								jQO1TQBvU: {
									background:
										"radial-gradient(16.6% 43.1% at 0% 50%, rgba(81, 47, 235, 0.8) 0%, rgba(255, 255, 255, 0) 100%)",
								},
								PHtno0CXq: {
									background:
										"radial-gradient(20.7% 50% at 50% 100%, rgba(81, 47, 235, 0.8) 0%, rgba(255, 255, 255, 0) 100%)",
								},
							}}
						/>
						<motion.div
							className={"framer-106jgv6"}
							data-framer-name={"Fill"}
							layoutDependency={layoutDependency}
							layoutId={"w87nkEsGE"}
							style={{
								backgroundColor: PPM8eZNfR,
								borderBottomLeftRadius: 8,
								borderBottomRightRadius: 8,
								borderTopLeftRadius: 8,
								borderTopRightRadius: 8,
							}}
						/>
						<RichText
							__fromCanvasComponent={true}
							className={"framer-6n3yfi"}
							data-framer-name={"Text"}
							fonts={["FS;Outfit-light"]}
							layoutDependency={layoutDependency}
							layoutId={"JSZb5sUk5"}
							style={{
								"--extracted-r6o4lv":
									"var(--variable-reference-BrUi5h7tU-CccDZOMJL)",
								"--framer-link-text-color": "rgb(0, 153, 255)",
								"--framer-link-text-decoration": "underline",
								"--framer-paragraph-spacing": "0px",
								"--variable-reference-BrUi5h7tU-CccDZOMJL": BrUi5h7tU,
								"--variable-reference-Rb5OgUSWE-CccDZOMJL": Rb5OgUSWE,
							}}
							text={ofLqZhEO8}
							verticalAlignment={"top"}
							withExternalLayout={true}
						>
							<React.Fragment>
								<motion.p
									style={{
										"--font-selector": "RlM7T3V0Zml0LWxpZ2h0",
										"--framer-font-family":
											'"Outfit", "Outfit Placeholder", sans-serif',
										"--framer-font-size":
											"calc(var(--variable-reference-Rb5OgUSWE-CccDZOMJL) * 1px)",
										"--framer-font-weight": "300",
										"--framer-text-color":
											"var(--extracted-r6o4lv, var(--variable-reference-BrUi5h7tU-CccDZOMJL))",
									}}
								>
									{"Running stroke"}
								</motion.p>
							</React.Fragment>
						</RichText>
						{VGW0OvIrj && (
							<motion.div
								className={"framer-1on3xub"}
								data-framer-name={"Icon holder"}
								layoutDependency={layoutDependency}
								layoutId={"I2SlqAr5u"}
								style={{
									backgroundColor:
										"var(--token-17c08985-425f-4b75-81e9-d1425ce278a8, rgba(255, 255, 255, 0.12))",
									borderBottomLeftRadius: 4,
									borderBottomRightRadius: 4,
									borderTopLeftRadius: 4,
									borderTopRightRadius: 4,
								}}
							>
								<ComponentViewportProvider>
									<motion.div
										className={"framer-pkkb44-container"}
										layoutDependency={layoutDependency}
										layoutId={"jVUJK1_pO-container"}
									>
										<Icon
											color={"rgba(255, 255, 255, 0.9)"}
											height={"100%"}
											iconSearch={"House"}
											iconSelection={"PaperPlaneRight"}
											id={"jVUJK1_pO"}
											layoutId={"jVUJK1_pO"}
											mirrored={false}
											selectByList={true}
											style={{
												height: "100%",
												width: "100%",
											}}
											weight={"regular"}
											width={"100%"}
										/>
									</motion.div>
								</ComponentViewportProvider>
							</motion.div>
						)}
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-5KfUw.framer-16nqqlq, .framer-5KfUw .framer-16nqqlq { display: block; }",
	".framer-5KfUw.framer-1oe2mnv { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; height: min-content; justify-content: space-between; overflow: visible; padding: 10px 20px 10px 20px; position: relative; width: min-content; }",
	".framer-5KfUw .framer-ogl64s { bottom: 0px; flex: none; left: 0px; overflow: hidden; position: absolute; right: 68px; top: 0px; will-change: var(--framer-will-change-override, transform); z-index: 0; }",
	".framer-5KfUw .framer-16gmlxt { bottom: 0px; flex: none; left: 0px; overflow: hidden; position: absolute; right: 0px; top: 0px; will-change: var(--framer-will-change-override, transform); z-index: 0; }",
	".framer-5KfUw .framer-106jgv6 { bottom: 2px; flex: none; left: 2px; overflow: hidden; position: absolute; right: 2px; top: 2px; will-change: var(--framer-will-change-override, transform); z-index: 0; }",
	".framer-5KfUw .framer-6n3yfi { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	".framer-5KfUw .framer-1on3xub { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 25px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 25px; will-change: var(--framer-will-change-override, transform); z-index: 1; }",
	".framer-5KfUw .framer-pkkb44-container { flex: none; height: 15px; position: relative; width: 15px; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-5KfUw .framer-1on3xub { gap: 0px; } .framer-5KfUw .framer-1on3xub > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-5KfUw .framer-1on3xub > :first-child { margin-left: 0px; } .framer-5KfUw .framer-1on3xub > :last-child { margin-right: 0px; } }",
];
var FramerCccDZOMJL = withCSS(Component, css, "framer-5KfUw");
var stdin_default = FramerCccDZOMJL;
FramerCccDZOMJL.displayName = "Cards/ Animated border button";
FramerCccDZOMJL.defaultProps = {
	height: 39,
	width: 86,
};
addPropertyControls(FramerCccDZOMJL, {
	variant: {
		options: ["oLeVJE9Vq", "jjFHb8UN5", "PHtno0CXq", "jQO1TQBvU"],
		optionTitles: ["Top", "Right", "Bottom", "Left"],
		title: "Variant",
		type: ControlType.Enum,
	},
	ofLqZhEO8: {
		defaultValue: "Button",
		displayTextArea: false,
		title: "Button text",
		type: ControlType.String,
	},
	Rb5OgUSWE: {
		defaultValue: 16,
		title: "Text size",
		type: ControlType.Number,
	},
	BrUi5h7tU: {
		defaultValue: "rgb(255, 255, 255)",
		title: "Text color",
		type: ControlType.Color,
	},
	PPM8eZNfR: {
		defaultValue: "rgb(49, 49, 49)",
		title: "Button fill",
		type: ControlType.Color,
	},
	VGW0OvIrj: {
		defaultValue: false,
		title: "Icon Visible",
		type: ControlType.Boolean,
	},
});
addFonts(
	FramerCccDZOMJL,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Outfit",
					source: "fontshare",
					style: "normal",
					url: "https://framerusercontent.com/third-party-assets/fontshare/wf/HGVZO4W7MOWSOT5FITRR2LXJL4LPEVKA/JGNFYTACJN27RPO2O5AUTRRZD4FNRJPI/W7JHARPQSG6P4YAUJKIMUM6JNAX2RFW3.woff2",
					weight: "300",
				},
			],
		},
		...PhosphorFonts,
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:cards/animated-border-button
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "oLeVJE9Vq",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"03e84f604d558643c3b6be5341937b8855a6dbf7a820b887c6c5c1f3ad48ac5b"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders AnimatedBorderButtonFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"03e84f604d558643c3b6be5341937b8855a6dbf7a820b887c6c5c1f3ad48ac5b"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var animated_border_button_default = ComponentWithRoot;
export { animated_border_button_default as default };
