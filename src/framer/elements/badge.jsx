// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 03e84f604d558643 "Radison (copy)", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * title?: string // Title
 * textColor?: string // Text Color
 * background?: string // Background
 * logoVisible?: boolean // Logo Visible
 * logoOpacity?: number // Logo Opacity
 * fontSize?: number // Font Size
}} Props

 */
import { routes } from "../chunks/chunk-HNSAVAZ4.js";

// virtual:elements/badge
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/3XFNPuXkwEjwtGkCvPcp/8BoR90JsNzSBAHWBSJWD/BpV_0Y1_B.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	RichText,
	SVG,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var serializationHash = "framer-wrnxT";
var variantClassNames = {
	xY1UkxkrO: "framer-v-1lc8qgd",
};
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition =
		value !== null && value !== void 0 ? value : config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var getProps = ({
	background,
	fontSize,
	height,
	id,
	logoOpacity,
	logoVisible,
	textColor,
	title,
	width,
	...props
}) => {
	var _ref, _ref1, _ref2, _ref3, _ref4;
	return {
		...props,
		bWKfsW3Ha:
			(_ref =
				background !== null && background !== void 0
					? background
					: props.bWKfsW3Ha) !== null && _ref !== void 0
				? _ref
				: "rgb(13, 13, 13)",
		LZ2eCPtLx:
			(_ref1 =
				fontSize !== null && fontSize !== void 0
					? fontSize
					: props.LZ2eCPtLx) !== null && _ref1 !== void 0
				? _ref1
				: 14,
		OLBJJ2ZZ2:
			(_ref2 = title !== null && title !== void 0 ? title : props.OLBJJ2ZZ2) !==
				null && _ref2 !== void 0
				? _ref2
				: "Radison",
		sVlsQOR6K:
			(_ref3 =
				textColor !== null && textColor !== void 0
					? textColor
					: props.sVlsQOR6K) !== null && _ref3 !== void 0
				? _ref3
				: "var(--token-8c14519b-b926-46e8-8772-9a05cbede172, rgba(255, 255, 255, 0.7))",
		xOxJpNi7Y:
			logoVisible !== null && logoVisible !== void 0
				? logoVisible
				: props.xOxJpNi7Y,
		zKyvF25Hr:
			(_ref4 =
				logoOpacity !== null && logoOpacity !== void 0
					? logoOpacity
					: props.zKyvF25Hr) !== null && _ref4 !== void 0
				? _ref4
				: 1,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const {
		style,
		className,
		layoutId,
		variant,
		OLBJJ2ZZ2,
		sVlsQOR6K,
		bWKfsW3Ha,
		xOxJpNi7Y,
		zKyvF25Hr,
		LZ2eCPtLx,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		defaultVariant: "xY1UkxkrO",
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const ref1 = React.useRef(null);
	const defaultLayoutId = React.useId();
	const sharedStyleClassNames = [];
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup
			id={layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId}
		>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							serializationHash,
							...sharedStyleClassNames,
							"framer-1lc8qgd",
							className,
							classNames,
						)}
						data-border={true}
						data-framer-name={"Badge"}
						layoutDependency={layoutDependency}
						layoutId={"xY1UkxkrO"}
						ref={ref !== null && ref !== void 0 ? ref : ref1}
						style={{
							"--border-bottom-width": "1px",
							"--border-color":
								"var(--token-6839e435-35f3-4ab3-b723-e98c27e525bc, rgba(255, 255, 255, 0.1))",
							"--border-left-width": "1px",
							"--border-right-width": "1px",
							"--border-style": "solid",
							"--border-top-width": "1px",
							backgroundColor: bWKfsW3Ha,
							borderBottomLeftRadius: 8,
							borderBottomRightRadius: 8,
							borderTopLeftRadius: 8,
							borderTopRightRadius: 8,
							...style,
						}}
					>
						{xOxJpNi7Y && (
							<motion.div
								className={"framer-1n5jjb"}
								data-framer-name={"logo holder"}
								layoutDependency={layoutDependency}
								layoutId={"oXfVRMEHL"}
								style={{
									opacity: zKyvF25Hr,
								}}
							>
								<SVG
									className={"framer-puitj3"}
									data-framer-name={"Graphic"}
									layout={"position"}
									layoutDependency={layoutDependency}
									layoutId={"kKDLLMK6O"}
									opacity={1}
									svg={
										'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 15 15"><path d="M 7.5 3.984 C 7.5 5.926 5.958 7.5 4.056 7.5 L 0.612 7.5 L 0.612 3.984 C 0.612 2.043 2.154 0.469 4.056 0.469 C 5.958 0.469 7.5 2.043 7.5 3.984 Z M 7.5 11.016 C 7.5 9.074 9.042 7.5 10.944 7.5 L 14.388 7.5 L 14.388 11.016 C 14.388 12.957 12.846 14.531 10.944 14.531 C 9.042 14.531 7.5 12.957 7.5 11.016 Z M 0.612 11.016 C 0.612 12.957 2.154 14.531 4.056 14.531 L 7.5 14.531 L 7.5 11.016 C 7.5 9.074 5.958 7.5 4.056 7.5 C 2.154 7.5 0.612 9.074 0.612 11.016 Z M 14.388 3.984 C 14.388 2.043 12.846 0.469 10.944 0.469 L 7.5 0.469 L 7.5 3.984 C 7.5 5.926 9.042 7.5 10.944 7.5 C 12.846 7.5 14.388 5.926 14.388 3.984 Z" fill="rgb(255, 255, 255)"></path></svg>'
									}
									svgContentId={10498277885}
									withExternalLayout={true}
								/>
							</motion.div>
						)}
						<RichText
							__fromCanvasComponent={true}
							className={"framer-gk8fag"}
							fonts={["FS;Outfit-light"]}
							layoutDependency={layoutDependency}
							layoutId={"yeL9I7Vwz"}
							style={{
								"--extracted-r6o4lv":
									"var(--variable-reference-sVlsQOR6K-BpV_0Y1_B)",
								"--framer-link-text-color": "rgb(0, 153, 255)",
								"--framer-link-text-decoration": "underline",
								"--variable-reference-LZ2eCPtLx-BpV_0Y1_B": LZ2eCPtLx,
								"--variable-reference-sVlsQOR6K-BpV_0Y1_B": sVlsQOR6K,
							}}
							text={OLBJJ2ZZ2}
							verticalAlignment={"top"}
							withExternalLayout={true}
						>
							<React.Fragment>
								<motion.p
									style={{
										"--font-selector": "RlM7T3V0Zml0LWxpZ2h0",
										"--framer-font-family":
											'"Outfit", "Outfit Placeholder", sans-serif',
										"--framer-font-size":
											"calc(var(--variable-reference-LZ2eCPtLx-BpV_0Y1_B) * 1px)",
										"--framer-font-weight": "300",
										"--framer-text-alignment": "center",
										"--framer-text-color":
											"var(--extracted-r6o4lv, var(--variable-reference-sVlsQOR6K-BpV_0Y1_B))",
									}}
								>
									{"Radison"}
								</motion.p>
							</React.Fragment>
						</RichText>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-wrnxT.framer-1pwso76, .framer-wrnxT .framer-1pwso76 { display: block; }",
	".framer-wrnxT.framer-1lc8qgd { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: center; overflow: hidden; padding: 8px 13px 8px 13px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }",
	".framer-wrnxT .framer-1n5jjb { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 15px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 15px; }",
	".framer-wrnxT .framer-puitj3 { flex: none; height: 15px; position: relative; width: 15px; }",
	".framer-wrnxT .framer-gk8fag { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-wrnxT.framer-1lc8qgd, .framer-wrnxT .framer-1n5jjb { gap: 0px; } .framer-wrnxT.framer-1lc8qgd > * { margin: 0px; margin-left: calc(8px / 2); margin-right: calc(8px / 2); } .framer-wrnxT.framer-1lc8qgd > :first-child, .framer-wrnxT .framer-1n5jjb > :first-child { margin-left: 0px; } .framer-wrnxT.framer-1lc8qgd > :last-child, .framer-wrnxT .framer-1n5jjb > :last-child { margin-right: 0px; } .framer-wrnxT .framer-1n5jjb > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } }",
	'.framer-wrnxT[data-border="true"]::after, .framer-wrnxT [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FramerBpV_0Y1_B = withCSS(Component, css, "framer-wrnxT");
var stdin_default = FramerBpV_0Y1_B;
FramerBpV_0Y1_B.displayName = "Elements/Badge";
FramerBpV_0Y1_B.defaultProps = {
	height: 33,
	width: 75,
};
addPropertyControls(FramerBpV_0Y1_B, {
	OLBJJ2ZZ2: {
		defaultValue: "Radison",
		displayTextArea: false,
		title: "Title",
		type: ControlType.String,
	},
	sVlsQOR6K: {
		defaultValue:
			"var(--token-8c14519b-b926-46e8-8772-9a05cbede172, rgba(255, 255, 255, 0.7))",
		title: "Text Color",
		type: ControlType.Color,
	},
	bWKfsW3Ha: {
		defaultValue: "rgb(13, 13, 13)",
		title: "Background",
		type: ControlType.Color,
	},
	xOxJpNi7Y: {
		defaultValue: false,
		title: "Logo Visible",
		type: ControlType.Boolean,
	},
	zKyvF25Hr: {
		defaultValue: 1,
		max: 1,
		min: 0,
		step: 0.01,
		title: "Logo Opacity",
		type: ControlType.Number,
	},
	LZ2eCPtLx: {
		defaultValue: 14,
		title: "Font Size",
		type: ControlType.Number,
	},
});
addFonts(
	FramerBpV_0Y1_B,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Outfit",
					source: "fontshare",
					style: "normal",
					url: "https://framerusercontent.com/third-party-assets/fontshare/wf/HGVZO4W7MOWSOT5FITRR2LXJL4LPEVKA/JGNFYTACJN27RPO2O5AUTRRZD4FNRJPI/W7JHARPQSG6P4YAUJKIMUM6JNAX2RFW3.woff2",
					weight: "300",
				},
			],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:elements/badge
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"03e84f604d558643c3b6be5341937b8855a6dbf7a820b887c6c5c1f3ad48ac5b"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders BadgeFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"03e84f604d558643c3b6be5341937b8855a6dbf7a820b887c6c5c1f3ad48ac5b"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var badge_default = ComponentWithRoot;
export { badge_default as default };
